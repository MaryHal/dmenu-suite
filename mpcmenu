#!/bin/bash

# TODO:
#   - More robust playlist management (even though I normally have and use only
#     a single playlist)
#   - Remove (more) unused features?
#   - More abstraction, tons of repeats

source $HOME/bin/menu/lib/dmenu_helpers.sh

# Menu Items
mainMenu="[Select]
[Current]
[Play]
[Stop]
[Pause]
[Load]
[Playlist]
[Previous]
[Next]
[Seek]
[Replay]
[Random]
[Repeat]
[Single]
[Lyrics]
[Update]"

playlistOptions="[Add]
[AddAll]
[Remove]
[Clear]
[Save]
[Load]
[Delete]"

seekOptions="0%
10%
20%
30%
40%
50%
60%
70%
80%
90%"

#[Random: `mpc | sed 's/volume://' | sed -n 3p | awk '{print $5}'`]
#[Repeat: `mpc | sed 's/volume://' | sed -n 3p | awk '{print $3}'`]
#[Single: `mpc | sed 's/volume://' | sed -n 3p | awk '{print $7}'`]

################
##### Main #####
################

action=$(menu "Option: " "$mainMenu")
case "$action" in
    '[Select]')
        selection=$(mpc playlist --format '%position%  [%album% - ][%artist% - ]%title%' | $DMENU -i -l 12 | awk '{print $1}')

        # If we selected something, play it, else, don't do anything. This fixes
        # that one bug where it will play a paused song if you don't select
        # anything.
        if [[ -n "$selection" ]]; then
            mpc -q play "$selection"
        fi
    ;;
    '[Current]')
        # mpc -f 'Title:  [%title%]\nArtist: [%artist%]\nAlbum:  [%album%]\n ' | $DMENU -l 7
        notify-send "MPD:" "$(mpc -f 'Title:  [%title%]\nArtist: [%artist%]\nAlbum:  [%album%]\n ')"
    ;;
    '[Play]')
        mpc toggle -q
    ;;
    '[Stop]')
        mpc stop -q
    ;;
    '[Pause]')
        mpc toggle -q
    ;;
    '[Load]')
        choice=$(mpc lsplaylists | $DMENU -p 'Playlist:')
        if [[ -n "$choice" ]]; then
            mpc stop -q
            mpc clear -q
            mpc -q load "$choice"
            notify-send "MPD:" "Playlist \"$choice\" Loaded"
        fi
    ;;
    '[Playlist]')
        action=$(menu "Option: " "$playlistOptions")
        case "$action" in
            '[Add]')
                query=$($DMENU -p "Query:")
                mpc findadd $query
            ;;
            '[AddAll]')
                mpc update -q
                mpc ls | mpc add
            ;;
            '[Remove]')
                selection=$(mpc playlist --format '%position%  %title%' | $DMENU -i -t -l 12 | awk '{print $1}')
                while [ $selection ] ; do
                    mpc del $selection
                    selection=$(mpc playlist --format '%position%  %title%' | $DMENU -i -t -l 12 | awk '{print $1}')
                done
            ;;
            '[Clear]')
                mpc clear -q
                notify-send "MPD:" "Playlist Cleared"
            ;;
            '[Load]')
                choice=$(mpc lsplaylists | $DMENU -p 'Playlist:')
                if [[ -n "$choice" ]]; then
                    mpc stop -q
                    mpc clear -q
                    mpc -q load "$choice"
                    notify-send "MPD:" "Playlist \"$choice\" Loaded"
                fi
            ;;
            '[Save]')
                name=$(mpc lsplaylists | $DMENU -p 'Playlist:')
                mpc save "$name"
                notify-send "MPD:" "Playlist \"$name\" Saved"
            ;;
            '[Delete]')
                name=$(mpc lsplaylists | $DMENU -p 'Playlist:')
                mpc rm "$name"
                notify-send "MPD:" "Playlist \"$name\" Deleted"
            ;;
        esac
    ;;
    '[Previous]')
        mpc prev -q
    ;;
    '[Next]')
        mpc next -q
    ;;
    '[Seek]')
        seek=$(menu "Seek: " "$seekOptions")
        if [[ -n "$seek" ]]; then
            mpc seek "$seek"
        fi
    ;;
    '[Replay]')
        mpc stop -q
        mpc play -q
    ;;
    '[Random]')
        mpc random -q
    ;;
    '[Repeat]')
        mpc repeat -q
    ;;
    '[Single]')
        mpc single -q
    ;;
    '[Lyrics]')
        song=$(mpc current)
        file="$HOME/.lyrics/$song.txt"

        if [[ -e "$file" ]]; then
            $TERMINAL -e sh -c "less \"$file\""
        else
            notify-send "MPD:" "Lyrics for \"$song\" not found"
        fi
    ;;
    '[Update]')
        notify-send "MPD Database" "Updating"
        mpc update -q
    ;;
esac

